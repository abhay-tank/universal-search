{"version":3,"sources":["components/Searchbar/Searchbar.module.scss","components/Droplist/Droplist.module.scss","components/Searchbar/Searchbar.jsx","components/Droplist/Droplist.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Searchbar","state","searchInputValue","componentDidUpdate","prevProps","prevState","searchContent","resultList","trim","length","searchKeys","props","result","forEach","searchKey","dataList","dataObject","searchKeyIndex","key","caseSensitive","includes","push","toLowerCase","resultCallback","handleOnSubmit","event","preventDefault","setState","target","searchInput","value","handleOnChange","this","className","alignIcon","icon","placeholder","autoFocus","autoComplete","styles","toString","onSubmit","id","name","onChange","type","Component","defaultProps","faSearch","Droplist","filteredList","selectedOption","showOptions","selectedOptions","optionDivRef","current","classList","remove","add","searchResultCallback","removeSelectedOption","multipleSelect","addSelectedOption","option","selectedOptionCallback","toggleDiv","removeFromSelectedOptions","displayKey","filter","isSelected","hideOptions","currentTarget","contains","relatedTarget","React","createRef","searchOptions","placeHolder","selectedOptionList","optionList","tabIndex","onBlur","Array","isArray","map","index","substring","onClick","faTimesCircle","faTimes","faAngleUp","faAngleDown","ref","enableSearch","faCheckSquareSolid","faCheckSquareRegular","App","data","componentDidMount","jsonData","partners","fetchResult","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff417b03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Searchbar_inputContainer__2nGTp\",\"searchIcon\":\"Searchbar_searchIcon__VSYtn\",\"defaultInput\":\"Searchbar_defaultInput__2bEhb\",\"left\":\"Searchbar_left__1s_YJ\",\"right\":\"Searchbar_right__1kTnV\",\"universalInput\":\"Searchbar_universalInput__3Sn9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"droplistSelectDiv\":\"Droplist_droplistSelectDiv__3Sgl3\",\"droplistSelect\":\"Droplist_droplistSelect__3IkfU\",\"icons\":\"Droplist_icons__24fW7\",\"selectedKeys\":\"Droplist_selectedKeys__2jY2e\",\"multiSelectOption\":\"Droplist_multiSelectOption__3IHGP\",\"droplistOptions\":\"Droplist_droplistOptions__3Rd5r\",\"option\":\"Droplist_option__1za3g\",\"removeSelectedIcon\":\"Droplist_removeSelectedIcon__3EV_Z\",\"iconButton\":\"Droplist_iconButton__2KmfR\",\"hidden\":\"Droplist_hidden__l2nKK\",\"isSelected\":\"Droplist_isSelected__2tjQ-\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Searchbar.module.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n/**\r\n * Renders a <Searchbar /> component\r\n * @component\r\n * @example\r\n *\t<Searchbar\r\n *\t\tdataList={this.state.data}\r\n *\t\tsearchKeys={[\"name\", \"description\"]}\r\n *\t\tcaseSensitive={false}\r\n *\t\tresultCallback={this.fetchResult}\r\n *\t\tclassName=\"searchInput\"\r\n *\t\talignIcon=\"right\"\r\n *\t\tautoFocus={true}\r\n *\t\tplaceholder=\"Search\"\r\n * \t\ticonColor=\"black\"\r\n *\t/>\r\n */\r\nclass Searchbar extends Component {\r\n\tstate = {\r\n\t\tsearchInputValue: \"\",\r\n\t};\r\n\r\n\tcomponentDidUpdate = (prevProps, prevState) => {\r\n\t\tif (prevState.searchInputValue !== this.state.searchInputValue)\r\n\t\t\tthis.searchContent();\r\n\t};\r\n\t/**\r\n\t * @function searchContent\r\n\t * @param {Event} event\r\n\t * @fires props.resultCallback\r\n\t */\r\n\tsearchContent = () => {\r\n\t\tlet resultList = [];\r\n\t\tif (this.state.searchInputValue.trim().length) {\r\n\t\t\tconst searchKeys = this.props.searchKeys;\r\n\t\t\tlet result = {};\r\n\t\t\tsearchKeys.forEach((searchKey) => {\r\n\t\t\t\tresult[`${searchKey}Data`] = [];\r\n\t\t\t});\r\n\t\t\tthis.props.dataList.forEach((dataObject) => {\r\n\t\t\t\tfor (\r\n\t\t\t\t\tlet searchKeyIndex = 0;\r\n\t\t\t\t\tsearchKeyIndex < searchKeys.length;\r\n\t\t\t\t\tsearchKeyIndex++\r\n\t\t\t\t) {\r\n\t\t\t\t\tconst key = searchKeys[searchKeyIndex];\r\n\t\t\t\t\tif (!dataObject[key]) return;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.props.caseSensitive &&\r\n\t\t\t\t\t\tdataObject[key].includes(this.state.searchInputValue)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tresult[`${key}Data`].push(dataObject);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else if (\r\n\t\t\t\t\t\t!this.props.caseSensitive &&\r\n\t\t\t\t\t\tdataObject[key]\r\n\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t.includes(this.state.searchInputValue.toLowerCase())\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tresult[`${key}Data`].push(dataObject);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t/**\r\n\t\t\t * Create sorted list of result with order of props.searchKeys\r\n\t\t\t */\r\n\t\t\tsearchKeys.forEach((searchKey) => {\r\n\t\t\t\tresultList.push(...result[`${searchKey}Data`]);\r\n\t\t\t});\r\n\t\t}\r\n\t\t/**\r\n\t\t * Execute callback and return result.\r\n\t\t */\r\n\t\tthis.props.resultCallback(resultList);\r\n\t};\r\n\r\n\t/**\r\n\t * @function handleOnSubmit\r\n\t * @param {Event} event\r\n\t * Sets searchInputValue inside state and componentDidMount executes searchContent.\r\n\t */\r\n\thandleOnSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ searchInputValue: event.target.searchInput.value });\r\n\t};\r\n\r\n\t/**\r\n\t * @function handleOnChange\r\n\t * @param {Event} event\r\n\t * Sets searchInputValue inside state and componentDidMount executes searchContent.\r\n\t */\r\n\thandleOnChange = (event) => {\r\n\t\tthis.setState({ searchInputValue: event.target.value });\r\n\t};\r\n\trender() {\r\n\t\tlet {\r\n\t\t\tclassName,\r\n\t\t\talignIcon,\r\n\t\t\ticon,\r\n\t\t\tplaceholder,\r\n\t\t\tautoFocus,\r\n\t\t\tautoComplete,\r\n\t\t} = this.props;\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={`${styles[\"inputContainer\"]} ${styles[alignIcon]} ${\r\n\t\t\t\t\tclassName ? className : styles[\"defaultInput\"]\r\n\t\t\t\t} ${alignIcon}`}\r\n\t\t\t>\r\n\t\t\t\t{icon}\r\n\t\t\t\t<form\r\n\t\t\t\t\tautoComplete={autoComplete.toString()}\r\n\t\t\t\t\tonSubmit={this.handleOnSubmit}\r\n\t\t\t\t>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"searchInput\"\r\n\t\t\t\t\t\tname=\"searchInput\"\r\n\t\t\t\t\t\tclassName={styles[\"universalInput\"]}\r\n\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\tonChange={this.handleOnChange}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={this.state.searchInputValue}\r\n\t\t\t\t\t\tautoFocus={autoFocus}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nSearchbar.propTypes = {\r\n\t/**\r\n\t * Callback function when result is generated (Required)\r\n\t */\r\n\tresultCallback: PropTypes.func.isRequired,\r\n\t/**\r\n\t * List on which search is to be performed (Required)\r\n\t */\r\n\tdataList: PropTypes.array.isRequired,\r\n\t/**\r\n\t * Keys or items you want to search (Required)\r\n\t */\r\n\tsearchKeys: PropTypes.arrayOf(PropTypes.string),\r\n\t/**\r\n\t * SCSS className\r\n\t */\r\n\tclassName: PropTypes.string,\r\n\t/**\r\n\t * Input placeholder\r\n\t */\r\n\tplaceholder: PropTypes.string,\r\n\t/**\r\n\t * Input autofocus\r\n\t */\r\n\tautoFocus: PropTypes.bool,\r\n\t/**\r\n\t * Input autocomplete\r\n\t */\r\n\tinputAutoComplete: PropTypes.string,\r\n\t/**\r\n\t * Should search be caseSesnsitive\r\n\t */\r\n\tcaseSensitive: PropTypes.bool,\r\n\t/**\r\n\t * Align search icon to left or right\r\n\t */\r\n\talignIcon: PropTypes.oneOf([\"left\", \"right\"]),\r\n\t/**\r\n\t * Icon displayed along side input field\r\n\t */\r\n\ticon: PropTypes.element,\r\n};\r\n\r\nSearchbar.defaultProps = {\r\n\tplaceholder: \"\",\r\n\tclassName: \"\",\r\n\tautoFocus: false,\r\n\tcaseSensitive: false,\r\n\talignIcon: \"right\",\r\n\tautoComplete: \"off\",\r\n\ticon: <FontAwesomeIcon icon={faSearch} />,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Droplist.module.scss\";\r\nimport Searchbar from \"../Searchbar/Searchbar\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n\tfaAngleDown,\r\n\tfaAngleUp,\r\n\tfaTimes,\r\n\tfaCheckSquare as faCheckSquareSolid,\r\n\tfaTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCheckSquare as faCheckSquareRegular } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\n/**\r\n * Renders a <Droplist /> component\r\n * @component\r\n * @example\r\n * \t<Droplist\r\n * \t\tselectedOptionCallback={this.selectedOption}\r\n * \t\tdataList={this.state.data}\r\n * \t\tdisplayKey=\"name\"\r\n * \t\tplaceHolder=\"Select Something\"\r\n * \t\tmultipleSelect={false}\r\n * \t\tsearchOptions={{\r\n * \t\t\tenableSearch: true,\r\n * \t\t\tsearchKeys: [\"name\"],\r\n * \t\t\tcaseSensitive: false,\r\n * \t\t\tplaceholder: \"Search\",\r\n * \t\t\talignIcon: \"right\",\r\n * \t\t}}\r\n * \t/>\r\n */\r\nclass Droplist extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.optionDivRef = React.createRef();\r\n\t}\r\n\r\n\tstate = {\r\n\t\tfilteredList: [],\r\n\t\tselectedOption: \"\",\r\n\t\tshowOptions: false,\r\n\t\tselectedOptions: [],\r\n\t};\r\n\r\n\tcomponentDidUpdate = () => {\r\n\t\tif (this.state.showOptions) {\r\n\t\t\tthis.optionDivRef.current.classList.remove(styles[\"hidden\"]);\r\n\t\t} else {\r\n\t\t\tthis.optionDivRef.current.classList.add(styles[\"hidden\"]);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @function searchResultCallback\r\n\t * Retrieve filtered array of objects after performing search in dataList.\r\n\t * @param {Array} result\r\n\t */\r\n\tsearchResultCallback = (result) => {\r\n\t\tthis.setState({ filteredList: [...result] });\r\n\t};\r\n\r\n\t/**\r\n\t * @function removeSelectedOption\r\n\t * Clear selectedOption or all selectedOptions.\r\n\t */\r\n\tremoveSelectedOption = () => {\r\n\t\tif (this.props.multipleSelect) {\r\n\t\t\tthis.setState({ selectedOptions: [] });\r\n\t\t} else {\r\n\t\t\tthis.setState({ selectedOption: \"\" });\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @function addSelectedOption\r\n\t * If multipleSelect is true, then selected option is added to selectedOptions Array.\r\n\t * @param {Object} option\r\n\t */\r\n\taddSelectedOption = (option) => {\r\n\t\tif (this.props.multipleSelect) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tselectedOptions: [...this.state.selectedOptions, option],\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconst { selectedOptionCallback } = this.props;\r\n\t\t\tthis.setState({\r\n\t\t\t\tselectedOption: option,\r\n\t\t\t});\r\n\t\t\tselectedOptionCallback(option);\r\n\t\t\tthis.toggleDiv();\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @function removeFromSelectedOptions\r\n\t * If multipleSelect is true, then selected option will be removed from selectedOptions Array.\r\n\t * @param {Object} option\r\n\t */\r\n\tremoveFromSelectedOptions = (option) => {\r\n\t\tconst { selectedOptionCallback, displayKey } = this.props;\r\n\t\tconst { selectedOptions } = this.state;\r\n\t\tthis.setState({\r\n\t\t\tselectedOptions: selectedOptions.filter(\r\n\t\t\t\t(selectedOption) => selectedOption[displayKey] !== option[displayKey]\r\n\t\t\t),\r\n\t\t});\r\n\t\tselectedOptionCallback(selectedOptions);\r\n\t};\r\n\r\n\t// UTIL functions\r\n\t/**\r\n\t * @function isSelected\r\n\t * Check if option is in selectedOptions. If yes return true else false.\r\n\t * @param {Object} option\r\n\t */\r\n\tisSelected = (option) => {\r\n\t\treturn this.state.selectedOptions.includes(option) ? true : false;\r\n\t};\r\n\r\n\t/**\r\n\t * @function hideOptions\r\n\t * Toggle optionsDiv. If multipleSelect is true, execute selectedOptionCallback.\r\n\t * @param {Event} event\r\n\t */\r\n\thideOptions = (event) => {\r\n\t\tconst { selectedOptionCallback, multipleSelect } = this.props;\r\n\t\tconst { selectedOptions } = this.state;\r\n\t\tif (\r\n\t\t\tevent.currentTarget.id === event.target.id &&\r\n\t\t\t!event.currentTarget.contains(event.relatedTarget)\r\n\t\t) {\r\n\t\t\tthis.toggleDiv();\r\n\t\t\tif (multipleSelect) {\r\n\t\t\t\tselectedOptionCallback(selectedOptions);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @function toggleDiv\r\n\t * Show / Hide optionsDiv\r\n\t */\r\n\ttoggleDiv = () => {\r\n\t\tthis.setState({ showOptions: !this.state.showOptions });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tselectedOption,\r\n\t\t\tselectedOptions,\r\n\t\t\tshowOptions,\r\n\t\t\tfilteredList,\r\n\t\t} = this.state;\r\n\t\tconst {\r\n\t\t\tdataList,\r\n\t\t\tdisplayKey,\r\n\t\t\tsearchOptions,\r\n\t\t\tplaceHolder,\r\n\t\t\tmultipleSelect,\r\n\t\t} = this.props;\r\n\t\tconst selectedOptionList = multipleSelect\r\n\t\t\t? selectedOptions\r\n\t\t\t: selectedOption;\r\n\t\tconst optionList = filteredList.length ? filteredList : dataList;\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\ttabIndex=\"0\"\r\n\t\t\t\tid=\"dropListSelect\"\r\n\t\t\t\tonBlur={this.hideOptions}\r\n\t\t\t\tclassName={styles[\"droplistSelectDiv\"]}\r\n\t\t\t>\r\n\t\t\t\t<div className={styles[\"droplistSelect\"]}>\r\n\t\t\t\t\t{(selectedOptionList.length && Array.isArray(selectedOptionList)) ||\r\n\t\t\t\t\tselectedOptionList[displayKey]?.length ? (\r\n\t\t\t\t\t\t<div className={styles[\"selectedKeys\"]}>\r\n\t\t\t\t\t\t\t{Array.isArray(selectedOptionList) ? (\r\n\t\t\t\t\t\t\t\tselectedOptionList.map((selectedOption, index) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<div className={styles[\"multiSelectOption\"]} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t{selectedOption[displayKey].length > 10\r\n\t\t\t\t\t\t\t\t\t\t\t\t? selectedOption[displayKey].substring(0, 10) + \"...\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: selectedOption[displayKey]}\r\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.removeFromSelectedOptions(selectedOption);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles[\"removeSelectedIcon\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\ticon={faTimesCircle}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div>{selectedOptionList[displayKey]}</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>{placeHolder}</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className={styles[\"icons\"]}>\r\n\t\t\t\t\t\t{(selectedOptionList.length && Array.isArray(selectedOptionList)) ||\r\n\t\t\t\t\t\tselectedOptionList[displayKey]?.length ? (\r\n\t\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\t\tclassName={styles[\"removeSelectedIcon\"]}\r\n\t\t\t\t\t\t\t\tonClick={this.removeSelectedOption}\r\n\t\t\t\t\t\t\t\ticon={faTimes}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\tonClick={this.toggleDiv}\r\n\t\t\t\t\t\t\tclassName={styles[\"iconButton\"]}\r\n\t\t\t\t\t\t\ticon={\r\n\t\t\t\t\t\t\t\tselectedOptionList[displayKey]?.length && showOptions\r\n\t\t\t\t\t\t\t\t\t? faAngleUp\r\n\t\t\t\t\t\t\t\t\t: faAngleDown\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tref={this.optionDivRef}\r\n\t\t\t\t\tclassName={`${styles[\"droplistOptions\"]} ${styles[\"hidden\"]}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{searchOptions.enableSearch && (\r\n\t\t\t\t\t\t<Searchbar\r\n\t\t\t\t\t\t\tdataList={dataList}\r\n\t\t\t\t\t\t\tsearchKeys={searchOptions.searchKeys}\r\n\t\t\t\t\t\t\tresultCallback={this.searchResultCallback}\r\n\t\t\t\t\t\t\talignIcon={searchOptions.alignIcon}\r\n\t\t\t\t\t\t\tcaseSensitive={searchOptions.caseSensitive}\r\n\t\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\t\tplaceholder={searchOptions.placeholder}\r\n\t\t\t\t\t\t\tautoComplete={false}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{optionList.map((option, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName={`${styles[\"option\"]} ${\r\n\t\t\t\t\t\t\t\t\tthis.isSelected(option) ? styles[\"isSelected\"] : \"\"\r\n\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.addSelectedOption(option);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{multipleSelect ? (\r\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\t\t\t\ticon={\r\n\t\t\t\t\t\t\t\t\t\t\tthis.isSelected(option)\r\n\t\t\t\t\t\t\t\t\t\t\t\t? faCheckSquareSolid\r\n\t\t\t\t\t\t\t\t\t\t\t\t: faCheckSquareRegular\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<button id={option[displayKey]}>{option[displayKey]}</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nDroplist.propTypes = {\r\n\t/**\r\n\t * Array of objects which should be rendered.\r\n\t */\r\n\tdataList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n\t/**\r\n\t * Callback when selectedOption/selectedOptions are toggled.\r\n\t */\r\n\tselectedOptionCallback: PropTypes.func.isRequired,\r\n\t/**\r\n\t * Object key which should be displayed as option.\r\n\t */\r\n\tdisplayKey: PropTypes.string.isRequired,\r\n\t/**\r\n\t * Allow multiple select.\r\n\t */\r\n\tmultipleSelect: PropTypes.bool,\r\n\t/**\r\n\t * Integrate search among options.\r\n\t */\r\n\tsearchOptions: PropTypes.object,\r\n\t/**\r\n\t * Placeholder when no options are selected.\r\n\t */\r\n\tplaceHolder: PropTypes.string,\r\n};\r\n\r\nDroplist.defaultProps = {\r\n\tplaceHolder: \"Select\",\r\n\tmultipleSelect: false,\r\n\tsearchOptions: { enableSearch: false },\r\n};\r\n\r\nexport default Droplist;\r\n","import React, { Component } from \"react\";\r\nimport Searchbar from \"./components/Searchbar/Searchbar\";\r\nimport \"./App.scss\";\r\nimport jsonData from \"./data/sample-data.json\";\r\nimport Droplist from \"./components/Droplist/Droplist\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faCoffee } from \"@fortawesome/free-solid-svg-icons\";\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tdata: [],\r\n\t};\r\n\tcomponentDidMount = () => {\r\n\t\tthis.setState((state, props) => ({\r\n\t\t\tdata: jsonData.partners,\r\n\t\t}));\r\n\t};\r\n\tfetchResult = (result) => {\r\n\t\tconsole.log(result);\r\n\t};\r\n\tselectedOption = (result) => {\r\n\t\tconsole.log(\"Dropdown selected option: \", result);\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"AppContainer\">\r\n\t\t\t\t<h1>Universal Search</h1>\r\n\t\t\t\t<Searchbar\r\n\t\t\t\t\tdataList={this.state.data}\r\n\t\t\t\t\tsearchKeys={[\"name\", \"description\"]}\r\n\t\t\t\t\talignIcon=\"right\"\r\n\t\t\t\t\tresultCallback={this.fetchResult}\r\n\t\t\t\t\tcaseSensitive={false}\r\n\t\t\t\t\tclassName=\"searchInput\"\r\n\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t/>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<h1>Universal Droplist with Searchbar</h1>\r\n\t\t\t\t<Droplist\r\n\t\t\t\t\tselectedOptionCallback={this.selectedOption}\r\n\t\t\t\t\tdataList={this.state.data}\r\n\t\t\t\t\tdisplayKey=\"name\"\r\n\t\t\t\t\tplaceHolder=\"Select Something\"\r\n\t\t\t\t\tmultipleSelect={true}\r\n\t\t\t\t\tsearchOptions={{\r\n\t\t\t\t\t\tenableSearch: true,\r\n\t\t\t\t\t\tsearchKeys: [\"name\"],\r\n\t\t\t\t\t\tcaseSensitive: false,\r\n\t\t\t\t\t\tplaceholder: \"Search\",\r\n\t\t\t\t\t\talignIcon: \"right\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}