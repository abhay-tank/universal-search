{"version":3,"sources":["components/Searchbar/Searchbar.module.scss","components/Droplist/Droplist.module.scss","components/Searchbar/Searchbar.jsx","components/Droplist/Droplist.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Searchbar","state","searchInputValue","componentDidUpdate","prevProps","prevState","searchContent","resultList","trim","length","searchKeys","props","result","forEach","searchKey","dataList","dataObject","searchKeyIndex","key","caseSensitive","includes","push","toLowerCase","resultCallback","handleOnSubmit","event","preventDefault","setState","target","searchInput","value","handleOnChange","this","className","alignIcon","icon","placeholder","autoFocus","autoComplete","styles","toString","onSubmit","id","name","onChange","type","Component","defaultProps","faSearch","Droplist","filteredList","selectedOption","showOptions","selectedOptions","optionDivRef","current","classList","remove","add","searchResultCallback","removeSelectedOption","multipleSelect","addToSelectedOptions","option","removeFromSelectedOptions","selectedOptionCallback","displayKey","filter","toggleDiv","isSelected","hideOptions","currentTarget","contains","relatedTarget","React","createRef","searchOptions","placeHolder","selectOption","selectedOptionList","optionList","tabIndex","onBlur","Array","isArray","map","index","substring","onClick","faTimesCircle","faTimes","faAngleUp","faAngleDown","ref","enableSearch","faCheckSquareSolid","faCheckSquareRegular","App","data","componentDidMount","jsonData","partners","fetchResult","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54ccf23b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Searchbar_inputContainer__1a39e\",\"searchIcon\":\"Searchbar_searchIcon__fCBBR\",\"defaultInput\":\"Searchbar_defaultInput__1x3kL\",\"left\":\"Searchbar_left__3np8X\",\"right\":\"Searchbar_right__1mujr\",\"universalInput\":\"Searchbar_universalInput__3m4xz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"droplistSelectDiv\":\"Droplist_droplistSelectDiv__fwZ5S\",\"droplistSelect\":\"Droplist_droplistSelect__D4aPS\",\"icons\":\"Droplist_icons__2kh80\",\"selectedKeys\":\"Droplist_selectedKeys__2qHx_\",\"multiSelectOption\":\"Droplist_multiSelectOption__2Ltac\",\"droplistOptions\":\"Droplist_droplistOptions__2sRSw\",\"option\":\"Droplist_option__3DRGH\",\"removeSelectedIcon\":\"Droplist_removeSelectedIcon__3QNKb\",\"iconButton\":\"Droplist_iconButton__1fZZL\",\"hidden\":\"Droplist_hidden__3iIaK\",\"isSelected\":\"Droplist_isSelected__QII7I\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Searchbar.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n/**\n * Renders a <Searchbar /> component\n * @component\n * @example\n *\t<Searchbar\n *\t\tdataList={this.state.data}\n *\t\tsearchKeys={[\"name\", \"description\"]}\n *\t\tcaseSensitive={false}\n *\t\tresultCallback={this.fetchResult}\n *\t\tclassName=\"searchInput\"\n *\t\talignIcon=\"right\"\n *\t\tautoFocus={true}\n *\t\tplaceholder=\"Search\"\n * \t\ticonColor=\"black\"\n *\t/>\n */\nclass Searchbar extends Component {\n\tstate = {\n\t\tsearchInputValue: \"\",\n\t};\n\n\tcomponentDidUpdate = (prevProps, prevState) => {\n\t\tif (prevState.searchInputValue !== this.state.searchInputValue)\n\t\t\tthis.searchContent();\n\t};\n\t/**\n\t * @function searchContent\n\t * @param {Event} event\n\t * @fires props.resultCallback\n\t */\n\tsearchContent = () => {\n\t\tlet resultList = [];\n\t\tif (this.state.searchInputValue.trim().length) {\n\t\t\tconst searchKeys = this.props.searchKeys;\n\t\t\tlet result = {};\n\t\t\tsearchKeys.forEach((searchKey) => {\n\t\t\t\tresult[`${searchKey}Data`] = [];\n\t\t\t});\n\t\t\tthis.props.dataList.forEach((dataObject) => {\n\t\t\t\tfor (\n\t\t\t\t\tlet searchKeyIndex = 0;\n\t\t\t\t\tsearchKeyIndex < searchKeys.length;\n\t\t\t\t\tsearchKeyIndex++\n\t\t\t\t) {\n\t\t\t\t\tconst key = searchKeys[searchKeyIndex];\n\t\t\t\t\tif (!dataObject[key]) return;\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.props.caseSensitive &&\n\t\t\t\t\t\tdataObject[key].includes(this.state.searchInputValue)\n\t\t\t\t\t) {\n\t\t\t\t\t\tresult[`${key}Data`].push(dataObject);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t!this.props.caseSensitive &&\n\t\t\t\t\t\tdataObject[key]\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(this.state.searchInputValue.toLowerCase())\n\t\t\t\t\t) {\n\t\t\t\t\t\tresult[`${key}Data`].push(dataObject);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t/**\n\t\t\t * Create sorted list of result with order of props.searchKeys\n\t\t\t */\n\t\t\tsearchKeys.forEach((searchKey) => {\n\t\t\t\tresultList.push(...result[`${searchKey}Data`]);\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Execute callback and return result.\n\t\t */\n\t\tthis.props.resultCallback(resultList);\n\t};\n\n\t/**\n\t * @function handleOnSubmit\n\t * @param {Event} event\n\t * Sets searchInputValue inside state and componentDidMount executes searchContent.\n\t */\n\thandleOnSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({ searchInputValue: event.target.searchInput.value });\n\t};\n\n\t/**\n\t * @function handleOnChange\n\t * @param {Event} event\n\t * Sets searchInputValue inside state and componentDidMount executes searchContent.\n\t */\n\thandleOnChange = (event) => {\n\t\tthis.setState({ searchInputValue: event.target.value });\n\t};\n\trender() {\n\t\tlet {\n\t\t\tclassName,\n\t\t\talignIcon,\n\t\t\ticon,\n\t\t\tplaceholder,\n\t\t\tautoFocus,\n\t\t\tautoComplete,\n\t\t} = this.props;\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`${styles[\"inputContainer\"]} ${styles[alignIcon]} ${\n\t\t\t\t\tclassName ? className : styles[\"defaultInput\"]\n\t\t\t\t} ${alignIcon}`}\n\t\t\t>\n\t\t\t\t{icon}\n\t\t\t\t<form\n\t\t\t\t\tautoComplete={autoComplete.toString()}\n\t\t\t\t\tonSubmit={this.handleOnSubmit}\n\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"searchInput\"\n\t\t\t\t\t\tname=\"searchInput\"\n\t\t\t\t\t\tclassName={styles[\"universalInput\"]}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\tonChange={this.handleOnChange}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={this.state.searchInputValue}\n\t\t\t\t\t\tautoFocus={autoFocus}\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSearchbar.propTypes = {\n\t/**\n\t * Callback function when result is generated (Required)\n\t */\n\tresultCallback: PropTypes.func.isRequired,\n\t/**\n\t * List on which search is to be performed (Required)\n\t */\n\tdataList: PropTypes.array.isRequired,\n\t/**\n\t * Keys or items you want to search (Required)\n\t */\n\tsearchKeys: PropTypes.arrayOf(PropTypes.string),\n\t/**\n\t * SCSS className\n\t */\n\tclassName: PropTypes.string,\n\t/**\n\t * Input placeholder\n\t */\n\tplaceholder: PropTypes.string,\n\t/**\n\t * Input autofocus\n\t */\n\tautoFocus: PropTypes.bool,\n\t/**\n\t * Input autocomplete\n\t */\n\tinputAutoComplete: PropTypes.string,\n\t/**\n\t * Should search be caseSesnsitive\n\t */\n\tcaseSensitive: PropTypes.bool,\n\t/**\n\t * Align search icon to left or right\n\t */\n\talignIcon: PropTypes.oneOf([\"left\", \"right\"]),\n\t/**\n\t * Icon displayed along side input field\n\t */\n\ticon: PropTypes.element,\n};\n\nSearchbar.defaultProps = {\n\tplaceholder: \"\",\n\tclassName: \"\",\n\tautoFocus: false,\n\tcaseSensitive: false,\n\talignIcon: \"right\",\n\tautoComplete: \"off\",\n\ticon: <FontAwesomeIcon icon={faSearch} />,\n};\n\nexport default Searchbar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Droplist.module.scss\";\nimport Searchbar from \"../Searchbar/Searchbar\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n\tfaAngleDown,\n\tfaAngleUp,\n\tfaTimes,\n\tfaCheckSquare as faCheckSquareSolid,\n\tfaTimesCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheckSquare as faCheckSquareRegular } from \"@fortawesome/free-regular-svg-icons\";\nexport class Droplist extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.optionDivRef = React.createRef();\n\t}\n\n\tstate = {\n\t\tfilteredList: [],\n\t\tselectedOption: \"\",\n\t\tshowOptions: false,\n\t\tselectedOptions: [],\n\t};\n\n\tcomponentDidUpdate = () => {\n\t\tif (this.state.showOptions) {\n\t\t\tthis.optionDivRef.current.classList.remove(styles[\"hidden\"]);\n\t\t} else {\n\t\t\tthis.optionDivRef.current.classList.add(styles[\"hidden\"]);\n\t\t}\n\t};\n\n\t/**\n\t * @function\n\t * Retrieve filtered array of objects after performing search in dataList.\n\t * @param {Array} result\n\t */\n\tsearchResultCallback = (result) => {\n\t\tthis.setState({ filteredList: [...result] });\n\t};\n\n\t/**\n\t * @function\n\t * Clear selectedOption or all selectedOptions.\n\t */\n\tremoveSelectedOption = () => {\n\t\tif (this.props.multipleSelect) {\n\t\t\tthis.setState({ selectedOptions: [] });\n\t\t} else {\n\t\t\tthis.setState({ selectedOption: \"\" });\n\t\t}\n\t};\n\n\t/**\n\t * @function\n\t * If multipleSelect is true, then selected option is added to selectedOptions Array.\n\t * @param {Object} option\n\t */\n\taddToSelectedOptions = (option) => {\n\t\tthis.setState({\n\t\t\tselectedOptions: [...this.state.selectedOptions, option],\n\t\t});\n\t};\n\n\t/**\n\t * @function\n\t * If multipleSelect is true, then selected option will be removed from selectedOptions Array.\n\t * @param {Object} option\n\t */\n\tremoveFromSelectedOptions = (option) => {\n\t\tconst { selectedOptionCallback, displayKey } = this.props;\n\t\tconst { selectedOptions } = this.state;\n\t\tthis.setState({\n\t\t\tselectedOptions: selectedOptions.filter(\n\t\t\t\t(selectedOption) => selectedOption[displayKey] !== option[displayKey]\n\t\t\t),\n\t\t});\n\t\tselectedOptionCallback(selectedOptions);\n\t};\n\n\t/**\n\t * @function\n\t * Return selectedOption.\n\t * @param {Object} option\n\t */\n\tresultCallback = (option) => {\n\t\tconst { selectedOptionCallback } = this.props;\n\t\tthis.setState({\n\t\t\tselectedOption: option,\n\t\t});\n\t\tselectedOptionCallback(option);\n\t\tthis.toggleDiv();\n\t};\n\n\t// UTIL functions\n\t/**\n\t * @function\n\t * Check if option is in selectedOptions. If yes return true else false.\n\t * @param {Object} option\n\t */\n\tisSelected = (option) => {\n\t\treturn this.state.selectedOptions.includes(option) ? true : false;\n\t};\n\n\t/**\n\t * Toggle optionsDiv\n\t * @param {Event} event\n\t */\n\thideOptions = (event) => {\n\t\tconst { selectedOptionCallback, multipleSelect } = this.props;\n\t\tconst { selectedOptions } = this.state;\n\t\tif (\n\t\t\tevent.currentTarget.id === event.target.id &&\n\t\t\t!event.currentTarget.contains(event.relatedTarget)\n\t\t) {\n\t\t\tthis.toggleDiv();\n\t\t\tif (multipleSelect) {\n\t\t\t\tselectedOptionCallback(selectedOptions);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Show / Hide optionsDiv\n\t */\n\ttoggleDiv = () => {\n\t\tthis.setState({ showOptions: !this.state.showOptions });\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tselectedOption,\n\t\t\tselectedOptions,\n\t\t\tshowOptions,\n\t\t\tfilteredList,\n\t\t} = this.state;\n\t\tconst {\n\t\t\tdataList,\n\t\t\tdisplayKey,\n\t\t\tsearchOptions,\n\t\t\tplaceHolder,\n\t\t\tmultipleSelect,\n\t\t} = this.props;\n\t\tconst selectOption = multipleSelect\n\t\t\t? this.addToSelectedOptions\n\t\t\t: this.resultCallback;\n\t\tconst selectedOptionList = multipleSelect\n\t\t\t? selectedOptions\n\t\t\t: selectedOption;\n\t\tconst optionList = filteredList.length ? filteredList : dataList;\n\t\treturn (\n\t\t\t<div\n\t\t\t\ttabIndex=\"0\"\n\t\t\t\tid=\"dropListSelect\"\n\t\t\t\tonBlur={this.hideOptions}\n\t\t\t\tclassName={styles[\"droplistSelectDiv\"]}\n\t\t\t>\n\t\t\t\t<div className={styles[\"droplistSelect\"]}>\n\t\t\t\t\t{(selectedOptionList.length && Array.isArray(selectedOptionList)) ||\n\t\t\t\t\tselectedOptionList[displayKey]?.length ? (\n\t\t\t\t\t\t<div className={styles[\"selectedKeys\"]}>\n\t\t\t\t\t\t\t{Array.isArray(selectedOptionList) ? (\n\t\t\t\t\t\t\t\tselectedOptionList.map((selectedOption, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div className={styles[\"multiSelectOption\"]} key={index}>\n\t\t\t\t\t\t\t\t\t\t\t{selectedOption[displayKey].length > 10\n\t\t\t\t\t\t\t\t\t\t\t\t? selectedOption[displayKey].substring(0, 10) + \"...\"\n\t\t\t\t\t\t\t\t\t\t\t\t: selectedOption[displayKey]}\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.removeFromSelectedOptions(selectedOption);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles[\"removeSelectedIcon\"]}\n\t\t\t\t\t\t\t\t\t\t\t\ticon={faTimesCircle}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>{selectedOptionList[displayKey]}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>{placeHolder}</>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className={styles[\"icons\"]}>\n\t\t\t\t\t\t{(selectedOptionList.length && Array.isArray(selectedOptionList)) ||\n\t\t\t\t\t\tselectedOptionList[displayKey]?.length ? (\n\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\tclassName={styles[\"removeSelectedIcon\"]}\n\t\t\t\t\t\t\t\tonClick={this.removeSelectedOption}\n\t\t\t\t\t\t\t\ticon={faTimes}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\tonClick={this.toggleDiv}\n\t\t\t\t\t\t\tclassName={styles[\"iconButton\"]}\n\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\tselectedOptionList[displayKey]?.length && showOptions\n\t\t\t\t\t\t\t\t\t? faAngleUp\n\t\t\t\t\t\t\t\t\t: faAngleDown\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tref={this.optionDivRef}\n\t\t\t\t\tclassName={`${styles[\"droplistOptions\"]} ${styles[\"hidden\"]}`}\n\t\t\t\t>\n\t\t\t\t\t{searchOptions.enableSearch && (\n\t\t\t\t\t\t<Searchbar\n\t\t\t\t\t\t\tdataList={dataList}\n\t\t\t\t\t\t\tsearchKeys={searchOptions.searchKeys}\n\t\t\t\t\t\t\tresultCallback={this.searchResultCallback}\n\t\t\t\t\t\t\talignIcon={searchOptions.alignIcon}\n\t\t\t\t\t\t\tcaseSensitive={searchOptions.caseSensitive}\n\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\tplaceholder={searchOptions.placeholder}\n\t\t\t\t\t\t\tautoComplete={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{optionList.map((option, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={`${styles[\"option\"]} ${\n\t\t\t\t\t\t\t\t\tthis.isSelected(option) ? styles[\"isSelected\"] : \"\"\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tselectOption(option);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{multipleSelect ? (\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\tthis.isSelected(option)\n\t\t\t\t\t\t\t\t\t\t\t\t? faCheckSquareSolid\n\t\t\t\t\t\t\t\t\t\t\t\t: faCheckSquareRegular\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<button id={option[displayKey]}>{option[displayKey]}</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nDroplist.propTypes = {\n\t/**\n\t * Array of objects which should be rendered.\n\t */\n\tdataList: PropTypes.arrayOf(Object).isRequired,\n\t/**\n\t * Callback when selectedOption/selectedOptions are toggled.\n\t */\n\tselectedOptionCallback: PropTypes.func.isRequired,\n\t/**\n\t * Object key which should be displayed as option.\n\t */\n\tdisplayKey: PropTypes.string.isRequired,\n\t/**\n\t * Allow multiple select.\n\t */\n\tmultipleSelect: PropTypes.bool,\n\t/**\n\t * Integrate search among options.\n\t */\n\tsearchOptions: PropTypes.object,\n\t/**\n\t * Placeholder when no options are selected.\n\t */\n\tplaceHolder: PropTypes.string,\n};\n\nDroplist.defaultProps = {\n\tplaceHolder: \"Select\",\n\tmultipleSelect: false,\n\tsearchOptions: { enableSearch: false },\n};\n\nexport default Droplist;\n","import React, { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport \"./App.scss\";\nimport jsonData from \"./data/sample-data.json\";\nimport Droplist from \"./components/Droplist/Droplist\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faCoffee } from \"@fortawesome/free-solid-svg-icons\";\nclass App extends Component {\n\tstate = {\n\t\tdata: [],\n\t};\n\tcomponentDidMount = () => {\n\t\tthis.setState((state, props) => ({\n\t\t\tdata: jsonData.partners,\n\t\t}));\n\t};\n\tfetchResult = (result) => {\n\t\tconsole.log(result);\n\t};\n\tselectedOption = (result) => {\n\t\tconsole.log(\"Dropdown selected option: \", result);\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"AppContainer\">\n\t\t\t\t<h1>Universal Search</h1>\n\t\t\t\t<Searchbar\n\t\t\t\t\tdataList={this.state.data}\n\t\t\t\t\tsearchKeys={[\"name\", \"description\"]}\n\t\t\t\t\talignIcon=\"right\"\n\t\t\t\t\tresultCallback={this.fetchResult}\n\t\t\t\t\tcaseSensitive={false}\n\t\t\t\t\tclassName=\"searchInput\"\n\t\t\t\t\tautoFocus={true}\n\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t/>\n\t\t\t\t<hr />\n\t\t\t\t<h1>Universal Droplist with Searchbar</h1>\n\t\t\t\t<Droplist\n\t\t\t\t\tselectedOptionCallback={this.selectedOption}\n\t\t\t\t\tdataList={this.state.data}\n\t\t\t\t\tdisplayKey=\"name\"\n\t\t\t\t\tplaceHolder=\"Select Something\"\n\t\t\t\t\tmultipleSelect={false}\n\t\t\t\t\tsearchOptions={{\n\t\t\t\t\t\tenableSearch: true,\n\t\t\t\t\t\tsearchKeys: [\"name\"],\n\t\t\t\t\t\tcaseSensitive: false,\n\t\t\t\t\t\tplaceholder: \"Search\",\n\t\t\t\t\t\talignIcon: \"right\",\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}